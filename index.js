const { Telegraf, Scenes, session, Markup } = require("telegraf");
const express = require("express");

const bot = new Telegraf(process.env.BOT_TOKEN);
const app = express();

// Webhook
app.use(express.json());
app.post("/webhook", async (req, res) => {
  try {
    console.log("Webhook –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ:", req.body);
    await bot.handleUpdate(req.body);
    res.sendStatus(200);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:", error);
    res.sendStatus(500);
  }
});

// üé≠ –û–¥–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ü–µ–Ω–∞ (–∑–∞—è–≤–∫–∞ –¥–ª—è –ª—é–¥–µ–π)
const peopleScene = new Scenes.WizardScene(
  "people",
  async (ctx) => {
    await ctx.reply("üìå –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:");
    return ctx.wizard.next();
  },
  async (ctx) => {
    ctx.wizard.state.name = ctx.message.text;
    await ctx.reply("üìç –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:");
    return ctx.wizard.next();
  },
  async (ctx) => {
    ctx.wizard.state.city = ctx.message.text;
    await ctx.reply("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞!");
    console.log("–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:", ctx.wizard.state);
    return ctx.scene.leave();
  }
);

// –°–æ–∑–¥–∞—ë–º —Å—Ü–µ–Ω—É –∏ –≤–∫–ª—é—á–∞–µ–º –≤ –±–æ—Ç–∞
const stage = new Scenes.Stage([peopleScene]);
bot.use(session());
bot.use(stage.middleware());

// ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
bot.start(async (ctx) => {
  await ctx.reply("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", 
    Markup.inlineKeyboard([
      [Markup.button.webApp("üë• –õ—é–¥–∏", process.env.WEB_APP_URL)],
      [Markup.button.webApp("üèõ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞", process.env.WEB_APP_URL)],
      [Markup.button.webApp("üìÖ –°–æ–±—ã—Ç–∏—è", process.env.WEB_APP_URL)],
      [Markup.button.webApp("‚úçÔ∏è –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É", process.env.WEB_APP_URL)]
    ])
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
bot.action("apply_people", (ctx) => ctx.scene.enter("people"));
bot.action("apply_space", (ctx) => ctx.reply("–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ."));
bot.action("apply_event", (ctx) => ctx.reply("–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ."));
bot.action("apply", (ctx) => ctx.reply("–§–æ—Ä–º–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤–∞."));

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(3000, () => console.log("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"));

module.exports = app;
