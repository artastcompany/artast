const { Telegraf, Scenes, session, Markup } = require("telegraf"); const express = require("express");

const bot = new Telegraf(process.env.BOT_TOKEN); const app = express();

// Webhook app.use(express.json()); app.post("/webhook", async (req, res) => { try { console.log("Webhook –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ:", req.body); await bot.handleUpdate(req.body); res.sendStatus(200); } catch (error) { console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:", error); res.sendStatus(500); } });

// üé≠ –°—Ü–µ–Ω–∞ –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ const peopleScene = new Scenes.WizardScene( "people", async (ctx) => { await ctx.reply("üìå –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:"); return ctx.wizard.next(); }, async (ctx) => { ctx.wizard.state.name = ctx.message.text; await ctx.reply("üìç –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:"); return ctx.wizard.next(); }, async (ctx) => { ctx.wizard.state.city = ctx.message.text; await ctx.reply("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞! –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é..."); await sendApplication(ctx, "–õ—é–¥–∏"); return ctx.scene.leave(); } );

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç async function sendApplication(ctx, type) { const adminChatId = process.env.ADMIN_CHAT_ID; if (!adminChatId) { console.error("‚ùå ADMIN_CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!"); return; }

let application = üöÄ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ —Ä–∞–∑–¥–µ–ª *${type}*! ; for (let key in ctx.wizard.state) { application += üìå ${key}: ${ctx.wizard.state[key]} ; }

console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ —á–∞—Ç:", adminChatId, application); await bot.telegram.sendMessage(adminChatId, application, { parse_mode: "Markdown" }); }

// –°–æ–∑–¥–∞—ë–º —Å—Ü–µ–Ω—É –∏ –≤–∫–ª—é—á–∞–µ–º –≤ –±–æ—Ç–∞ const stage = new Scenes.Stage([peopleScene]); bot.use(session()); bot.use(stage.middleware());

// –ö–Ω–æ–ø–∫–∏ bot.start((ctx) => { ctx.reply("ARTAST COMPANY –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", { reply_markup: Markup.inlineKeyboard([ [Markup.button.callback("üë§ –î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞", "apply_people")] ]), }); });

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ bot.action("apply_people", (ctx) => ctx.scene.enter("people"));

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ app.listen(3000, () => console.log("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"));

module.exports = app;
