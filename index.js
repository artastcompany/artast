const { Telegraf, Markup } = require("telegraf"); const express = require("express");

const bot = new Telegraf(process.env.BOT_TOKEN); const app = express(); const ADMIN_CHAT_ID = process.env.ADMIN_CHAT_ID;

// Webhook app.use(express.json()); app.post("/webhook", async (req, res) => { try { console.log("Webhook –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ:", req.body); await bot.handleUpdate(req.body); res.sendStatus(200); } catch (error) { console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:", error); res.sendStatus(500); } });

// –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ bot.start((ctx) => { ctx.reply("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", { reply_markup: Markup.inlineKeyboard([ [Markup.button.callback("üë§ –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É", "apply")], ]), }); });

// –õ–æ–≥–∏–∫–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö bot.action("apply", async (ctx) => { ctx.reply("üìå –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:"); bot.on("text", async (ctx) => { const name = ctx.message.text; await ctx.reply("üìç –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:"); bot.on("text", async (ctx) => { const city = ctx.message.text; await ctx.reply("üìû –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç (—Ç–µ–ª–µ–≥—Ä–∞–º, –∏–Ω—Å—Ç–∞–≥—Ä–∞–º, —Ç–µ–ª–µ—Ñ–æ–Ω):"); bot.on("text", async (ctx) => { const contact = ctx.message.text;

const message = `üöÄ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!

üë§ –ò–º—è: ${name} üìç –ì–æ—Ä–æ–¥: ${city} üìû –ö–æ–Ω—Ç–∞–∫—Ç: ${contact}`;

await bot.telegram.sendMessage(ADMIN_CHAT_ID, message);
    await ctx.reply("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");
  });
});

}); });

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ app.listen(3000, () => console.log("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"));

module.exports = app;
