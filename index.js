const { Telegraf, Markup, session, Scenes } = require("telegraf");
const express = require("express");

const bot = new Telegraf(process.env.BOT_TOKEN);
const app = express();

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Webhook
app.use(express.json());
app.post("/webhook", (req, res) => {
  bot.handleUpdate(req.body);
  res.sendStatus(200);
});

// *** –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ü–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∞ (—Ç–æ–ª—å–∫–æ –∏–º—è) ***
const testScene = new Scenes.WizardScene(
  "testScene",
  async (ctx) => {
    await ctx.reply("üìå –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:");
    return ctx.wizard.next();
  },
  async (ctx) => {
    ctx.wizard.state.name = ctx.message.text;
    await ctx.reply(`‚úÖ –í–∞—à–µ –∏–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${ctx.wizard.state.name}`);
    return ctx.scene.leave();
  }
);

const stage = new Scenes.Stage([testScene]);
bot.use(session());
bot.use(stage.middleware());

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.start((ctx) => {
  ctx.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ArtAst! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", {
    reply_markup: Markup.inlineKeyboard([
      [Markup.button.webApp("üë• –õ—é–¥–∏", process.env.WEB_APP_URL)],
      [Markup.button.webApp("üèõ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞", process.env.WEB_APP_URL)],
      [Markup.button.webApp("üìÖ –°–æ–±—ã—Ç–∏—è", process.env.WEB_APP_URL)],
      [Markup.button.callback("‚úçÔ∏è –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É", "start_test_scene")]
    ]),
  });
});

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ü–µ–Ω—ã
bot.action("start_test_scene", (ctx) => ctx.scene.enter("testScene"));

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
app.listen(3000, () => console.log("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"));

module.exports = app;
